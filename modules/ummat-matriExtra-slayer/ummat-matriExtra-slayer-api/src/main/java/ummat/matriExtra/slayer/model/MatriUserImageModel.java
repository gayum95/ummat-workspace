/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package ummat.matriExtra.slayer.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.sql.Blob;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the MatriUserImage service. Represents a row in the &quot;MatriExtra_MatriUserImage&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>ummat.matriExtra.slayer.model.impl.MatriUserImageModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>ummat.matriExtra.slayer.model.impl.MatriUserImageImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see MatriUserImage
 * @generated
 */
@ProviderType
public interface MatriUserImageModel extends BaseModel<MatriUserImage> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a matri user image model instance should use the {@link MatriUserImage} interface instead.
	 */

	/**
	 * Returns the primary key of this matri user image.
	 *
	 * @return the primary key of this matri user image
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this matri user image.
	 *
	 * @param primaryKey the primary key of this matri user image
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this matri user image.
	 *
	 * @return the uuid of this matri user image
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this matri user image.
	 *
	 * @param uuid the uuid of this matri user image
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the matri image ID of this matri user image.
	 *
	 * @return the matri image ID of this matri user image
	 */
	public long getMatriImageId();

	/**
	 * Sets the matri image ID of this matri user image.
	 *
	 * @param MatriImageId the matri image ID of this matri user image
	 */
	public void setMatriImageId(long MatriImageId);

	/**
	 * Returns the user ID of this matri user image.
	 *
	 * @return the user ID of this matri user image
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this matri user image.
	 *
	 * @param userId the user ID of this matri user image
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this matri user image.
	 *
	 * @return the user uuid of this matri user image
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this matri user image.
	 *
	 * @param userUuid the user uuid of this matri user image
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this matri user image.
	 *
	 * @return the user name of this matri user image
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this matri user image.
	 *
	 * @param userName the user name of this matri user image
	 */
	public void setUserName(String userName);

	/**
	 * Returns the matri user ID of this matri user image.
	 *
	 * @return the matri user ID of this matri user image
	 */
	public long getMatriUserId();

	/**
	 * Sets the matri user ID of this matri user image.
	 *
	 * @param MatriUserId the matri user ID of this matri user image
	 */
	public void setMatriUserId(long MatriUserId);

	/**
	 * Returns the matri user uuid of this matri user image.
	 *
	 * @return the matri user uuid of this matri user image
	 */
	public String getMatriUserUuid();

	/**
	 * Sets the matri user uuid of this matri user image.
	 *
	 * @param MatriUserUuid the matri user uuid of this matri user image
	 */
	public void setMatriUserUuid(String MatriUserUuid);

	/**
	 * Returns the image one of this matri user image.
	 *
	 * @return the image one of this matri user image
	 */
	public Blob getImageOne();

	/**
	 * Sets the image one of this matri user image.
	 *
	 * @param imageOne the image one of this matri user image
	 */
	public void setImageOne(Blob imageOne);

	/**
	 * Returns the image two of this matri user image.
	 *
	 * @return the image two of this matri user image
	 */
	public Blob getImageTwo();

	/**
	 * Sets the image two of this matri user image.
	 *
	 * @param imageTwo the image two of this matri user image
	 */
	public void setImageTwo(Blob imageTwo);

	/**
	 * Returns the image three of this matri user image.
	 *
	 * @return the image three of this matri user image
	 */
	public Blob getImageThree();

	/**
	 * Sets the image three of this matri user image.
	 *
	 * @param imageThree the image three of this matri user image
	 */
	public void setImageThree(Blob imageThree);

	/**
	 * Returns the image four of this matri user image.
	 *
	 * @return the image four of this matri user image
	 */
	public Blob getImageFour();

	/**
	 * Sets the image four of this matri user image.
	 *
	 * @param imageFour the image four of this matri user image
	 */
	public void setImageFour(Blob imageFour);

	@Override
	public MatriUserImage cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}